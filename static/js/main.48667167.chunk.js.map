{"version":3,"sources":["Components/display.js","Components/buttons.js","App.js","index.js"],"names":["Display","props","time","h","m","s","ms","Buttons","status","className","onClick","start","stop","reset","resume","App","useState","setTime","interv","setInterv","setStatus","run","setInterval","updateMs","updateS","updateM","updateH","clearInterval","ReactDOM","render","document","getElementById"],"mappings":"4KAaeA,MAXf,SAAiBC,GACb,OACI,gCACI,+BAAQA,EAAMC,KAAKC,GAAI,GAAMF,EAAMC,KAAKC,EAAI,IAAMF,EAAMC,KAAKC,IADjE,YAEI,+BAAQF,EAAMC,KAAKE,GAAI,GAAMH,EAAMC,KAAKE,EAAI,IAAMH,EAAMC,KAAKE,IAFjE,YAGI,+BAAQH,EAAMC,KAAKG,GAAI,GAAMJ,EAAMC,KAAKG,EAAI,IAAMJ,EAAMC,KAAKG,IAHjE,YAII,+BAAQJ,EAAMC,KAAKI,IAAK,GAAML,EAAMC,KAAKI,GAAK,IAAML,EAAMC,KAAKI,SCwB5DC,MA9Bf,SAAiBN,GACb,OACI,gCACuB,IAAjBA,EAAMO,OACR,wBAAQC,UAAU,gBACVC,QAAST,EAAMU,MADvB,mBAC+C,GAG5B,IAAjBV,EAAMO,OACR,gCACI,wBAAQC,UAAU,qBACdC,QAAST,EAAMW,KADnB,kBAEA,wBAAQH,UAAU,sBACdC,QAAST,EAAMY,MADnB,sBAEK,GAGU,IAAjBZ,EAAMO,OACR,gCACI,wBAAQC,UAAU,uBACdC,QAAST,EAAMa,OADnB,oBAEA,wBAAQL,UAAU,sBACdC,QAAST,EAAMY,MADnB,sBAEK,O,MC0CNE,MA7Df,WAAgB,IAAD,EAEWC,mBAAS,CAACV,GAAG,EAAGD,EAAE,EAAGD,EAAE,EAAGD,EAAE,IAFvC,mBAEND,EAFM,KAEAe,EAFA,OAGeD,qBAHf,mBAGNE,EAHM,KAGEC,EAHF,OAIeH,mBAAS,GAJxB,mBAINR,EAJM,KAIEY,EAJF,KAUPT,EAAQ,WACZU,IACAD,EAAU,GACVD,EAAUG,YAAYD,EAAK,MAGzBE,EAAWrB,EAAKI,GAChBkB,EAAUtB,EAAKG,EACfoB,EAAUvB,EAAKE,EACfsB,EAAUxB,EAAKC,EAEbkB,EAAM,WAcV,OAbe,KAAZI,IACDC,IACAD,EAAU,GAEG,KAAZD,IACDC,IACAD,EAAU,GAEI,MAAbD,IACDC,IACAD,EAAW,GAEbA,IACON,EAAQ,CAACX,GAAGiB,EAAUlB,EAAEmB,EAASpB,EAAEqB,EAAStB,EAAEuB,KAgBvD,OACE,qBAAKjB,UAAU,cAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CAASP,KAAMA,IACf,cAAC,EAAD,CAASM,OAAQA,EAAQG,MAAOA,EAAOG,OAN9B,kBAAMH,KAMwCC,KAjBhD,WACXe,cAAcT,GACdE,EAAU,IAe6DP,MAZ3D,WACZc,cAAcT,GACdE,EAAU,GACVH,EAAQ,CAACX,GAAG,EAAGD,EAAE,EAAGD,EAAE,EAAGD,EAAE,aChD/ByB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.48667167.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Display(props) {\r\n    return (\r\n        <div>\r\n            <span>{(props.time.h >=10) ? props.time.h : \"0\" + props.time.h}</span>&nbsp;:&nbsp;\r\n            <span>{(props.time.m >=10) ? props.time.m : \"0\" + props.time.m}</span>&nbsp;:&nbsp;\r\n            <span>{(props.time.s >=10) ? props.time.s : \"0\" + props.time.s}</span>&nbsp;:&nbsp;\r\n            <span>{(props.time.ms >=10) ? props.time.ms : \"0\" + props.time.ms}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Display;\r\n","import React from 'react';\r\n\r\nfunction Buttons(props) {\r\n    return (\r\n        <div>\r\n            {(props.status === 0) ?\r\n            <button className=\"stopwatch-btn\" \r\n                    onClick={props.start}>Start</button> : \"\"\r\n            }\r\n\r\n            {(props.status === 1) ?\r\n            <div>\r\n                <button className=\"stopwatch-btn stop\" \r\n                    onClick={props.stop}>Stop</button>\r\n                <button className=\"stopwatch-btn reset\" \r\n                    onClick={props.reset}>Reset</button> \r\n            </div> : \"\"\r\n            }\r\n\r\n            {(props.status === 2) ?\r\n            <div>\r\n                <button className=\"stopwatch-btn resume\" \r\n                    onClick={props.resume}>Resume</button>\r\n                <button className=\"stopwatch-btn reset\" \r\n                    onClick={props.reset}>Reset</button> \r\n            </div> : \"\"\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons;","import React, {useState} from 'react';\nimport Display from './Components/display';\nimport Buttons from './Components/buttons';\n\nimport './App.css';\n\nfunction App() {\n\n  const [time, setTime] = useState({ms:0, s:0, m:0, h:0}); \n  const [interv, setInterv] = useState(); \n  const [status, setStatus] = useState(0); \n\n  //not started = 0\n  //started = 1\n  //stoped = 2\n\n  const start = () => {\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 10));\n  };\n\n  let updateMs = time.ms;\n  let updateS = time.s;\n  let updateM = time.m;\n  let updateH = time.h;\n\n  const run = () => {\n    if(updateM === 60) {\n      updateH++;\n      updateM = 0;\n    }\n    if(updateS === 60) {\n      updateM++;\n      updateS = 0;  \n    }\n    if(updateMs === 100) {\n      updateS++;\n      updateMs = 0;\n    }\n    updateMs++;\n    return setTime({ms:updateMs, s:updateS, m:updateM, h:updateH})\n  }\n\n  const stop = () => {\n    clearInterval(interv);\n    setStatus(2);\n  };\n\n  const reset = () => {\n    clearInterval(interv);\n    setStatus(0);\n    setTime({ms:0, s:0, m:0, h:0})\n  };\n\n  const resume = () => start();\n\n  return (\n    <div className=\"main center\">\n      <div className=\"container center\">\n        <Display time={time}/>\n        <Buttons status={status} start={start} resume={resume} stop={stop} reset={reset} />\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n \n"],"sourceRoot":""}